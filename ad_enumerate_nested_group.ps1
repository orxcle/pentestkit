## enumerate nested groups in ad
## update the group name on line 6 with the starting group


# Update Variable : Group name to search
$groupName = "Example Group" ## change this
$max_depth = 10

# LDAP Provider query - unchanged
$domainObj = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
$PDC = ($domainObj.PdcRoleOwner).Name
$SearchString = "LDAP://"
$SearchString += $PDC + "/"
$DistinguishedName = "DC=$($domainObj.Name.Replace('.', ',DC='))"
$SearchString += $DistinguishedName
"LDAP Provider : $SearchString"
$Searcher = New-Object System.DirectoryServices.DirectorySearcher([ADSI]$SearchString)
$objDomain = New-Object System.DirectoryServices.DirectoryEntry ($SearchString)
$Searcher.SearchRoot = $objDomain
"---"

# Function call
Enumerate-Group $groupName 0
    
function Enumerate-Group ($groupName, $depth) {
    # Print the current group name
    "$("    " * $depth)$groupName"

    # Query for any nested groups
    $Searcher.filter="(name=$groupName)"
    $Result = $Searcher.FindAll()

    # For each result,
    Foreach($obj in $Result){
        # Retrieve the name of any nested group (returns null if no nested groups found)
        $childMember=$obj.Properties.member
        # If there is a nested group
        if($childMember){
            # Parse the name of the child for querying
            $searchChild=($childMember.substring(3) -split ',')[0]
            # Increment depth variable for pretty printing
            $depth++
            # Recurse this function IF depth < max
            # Safeguard for recursive nesting
            if ($depth -lt $max_depth){
                Enumerate-Group $searchChild $depth
            }
        }
    }
}
